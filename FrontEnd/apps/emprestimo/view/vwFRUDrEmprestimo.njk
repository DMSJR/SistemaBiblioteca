{% extends "templates/base.html" %}

{% block content %}
  <div x-data="emprestimoForm()">
    <ol class="breadcrumb mb-2">
      <li class="breadcrumb-item active"></li>
    </ol>
    <div class="row">
      <div class="col-12">
            <div class="card">

        <div class="card-header">
          {{title}}

        </div>

        <div class="card-body">
          <div class="m1">

            {# <form @submit.prevent="submitForm"> #}
            <form>
              <div class="row">
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="codigo">Código</label>
                    <input type="text" class="form-control" id="codigo" required="required" x-model="form.codigo" x-bind:disabled="disabled">
                  </div>
                </div>
                </div>

              <div class="row">
                <div class="col-md-4">
                  <div class="form-group">
                    <label for="dataemprestimo">Data Emprestimo</label>
                    <input type="date" class="form-control" id="dataemprestimo" x-model="form.dataemprestimo" x-bind:disabled="disabled">
                  </div>
                </div>

              <div class="col-md-4">
                <div class="form-group">
                  <label for="datadevolucao">Data Devolucao</label>
                  <input type="date" class="form-control" id="datadevolucao" x-model="form.datadevolucao" x-bind:disabled="disabled">
                </div>
              </div>
              </div>

              <div class="row">
                <div class="col-md-3">
                  <div class="form-group">
                    <label for="multa">Multa</label>
                    <input type="number" class="form-control" id="multa" x-model="form.multa" x-bind:disabled="disabled">
                  </div>
                </div>
              </div>
              <div class="form-group col-md-6">
                <label for="nomelivro">Nome do Livro</label>
                <select class="form-control" id="nomelivro" x-model="form.livro_id" x-bind:disabled="disabled">
                  <option value="" disabled="disabled" selected="selected">Selecione um livro</option>
                  {% for livro in livros %}
                    <option value="{{ livro.livro_id }}" {% if livro.livro_id == data.livro_id %} selected="selected{% endif %}">
                      {{ livro.titulo }}
                    </option>
                  {% endfor %}
                </select>
              </div>

              <div class="form-group col-md-6">
                <label for="nomeusuario">Nome do Usuário</label>
                <select class="form-control" id="nomeusuario" x-model="form.usuario_id" x-bind:disabled="disabled">
                  <option value="" disabled="disabled" selected="selected">Selecione um usuário</option>
                  {% for usuario in usuarios %}
                    <option value="{{ usuario.usuario_id }}" {% if usuario.usuario_id == data.usuario_id %} selected="selected{% endif %}">
                      {{ usuario.nome }}
                    </option>
                  {% endfor %}
                </select>
              </div>
              <button type="button" @click="updateForm()" class="btn btn-primary mt-4">Salvar</button>
              <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Deletar</button>
              <a href="/emprestimo/manutEmprestimo" class="btn btn-info mt-4 ml-2" role="button" aria-disabled="true">Retornar</a>
            </form>

            <div class="mt-3">
              <template x-if="message">
                <div :class="messageClass" x-text="message"></div>
              </template>
            </div>
          </div>

        </div>
      </div>
    </div>
  </div>

  <script>

    window.onload = function () {
      windowOnLoad();

      //@ Caso tenha dado erro no servidor frontEnd, ele será mostrado aqui.
      const localErro = "{{erro}}";
      if (localErro != "") {
        alert("[vwEmprestimo|onload]Servidor retornou o erro:" + localErro);
      }
      $("#codigo").focus();

    };

    function emprestimoForm() {
      return {
        form: {
          emprestimo_id: "{{data.emprestimo_id}}",
          codigo: "{{data.codigo}}",
          dataemprestimo: "{{data.dataemprestimo}}",
          datadevolucao: "{{data.datadevolucao}}",
          multa: '{{data.multa}}',
          livro_id: '{{data.livro_id}}', // Altere para o ID do livro
          usuario_id: '{{data.usuario_id}}', // Altere para o ID do usuário
          deleted: false
        },
        message: '',
        messageClass: '',
        disabled: {{disabled}},

        async updateForm() {
        console.log("valor na pagina", JSON.stringify(this.form))
          try {

            //console.log("Valor na página:", JSON.stringify(this.form))

            const response = await fetch('/emprestimo/UpdateEmprestimo', {
              method: 'POST',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(this.form)
            });

            const result = await response.json();
            if (result.status == "ok") {
              alert("Emprestimo atualizado com suscesso");
            } else {
              const errorData = result.status;
              this.message = `Erro! Não foi possível atualizar os dados da emprestimo devido ao erro: ${errorData}`;
              this.messageClass = 'alert alert-danger';
            }
          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        async deleteForm() {
          try {
            //console.log("Valor na página:", JSON.stringify(this.form.emprestimo_id))
            const response = await fetch('/emprestimo/DeleteEmprestimo', {
              method: 'POST',
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(this.form)
            });

            const result = await response.json();
            if (result.status == "ok") {
              alert("emprestimo deletada com suscesso");
              //@ Redireciona para a página de manutenção
              window.location.href = "/emprestimo/manutEmprestimo";

            } else {
              const errorData = result.status;
              this.message = `Erro! Não foi possível atualizar os dados da emprestimo devido ao erro: ${errorData}`;
              this.messageClass = 'alert alert-danger';
            }

          } catch (error) {
            this.message = `Erro de conexão: ${error.message}`;
            this.messageClass = 'alert alert-danger';
          }
        },

        resetForm() {
          this.form = {
            codigo: '',
            dataemprestimo: '',
            datadevolucao: '',
            multa: '',
            autores: '',
            nomelivro: '',
            nomeusuario: '',
            deleted: false
          };
          this.message = false;
        }
      };
    }
  </script>

{% endblock %}