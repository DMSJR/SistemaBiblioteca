{% extends "templates/base.html" %}

{% block content %}
<div x-data="autorForm()">
    <ol class="breadcrumb mb-2">
        <li class="breadcrumb-item active"></li>
    </ol>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    Cadastro de Autor
                </div>
                <div class="card-body">
                    <form class="m1">
                    <form>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="codigo">Código</label>
                                    <input type="text" class="form-control" id="codigo" x-model="form.codigo" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="nome">Nome do Autor</label>
                                    <input type="text" class="form-control" id="nome" x-model="form.nome">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="nacionalidade">Nacionalidade</label>
                                    <input type="text" class="form-control" id="nacionalidade" x-model="form.nacionalidade">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="datanasc">Data de Nascimento</label>
                                    <input type="date" class="form-control" id="datanasc" x-model="form.datanasc">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="royalties">Royalties</label>
                                    <input type="number" step="0.01" class="form-control" id="royalties" x-model="form.royalties">
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-start mt-4">
                            <button type="button" @click="insertForm()" class="btn btn-primary" style="margin-right: 10px;">Salvar</button>
                            <a href="/autor/manutAutor" class="btn btn-info ml-2" role="button">Retornar</a>
                        </div>
                    </form>
                    <div class="mt-3">
                        <template x-if="message">
                            <div :class="messageClass" x-text="message"></div>
                        </template>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    window.onload = function () {
        const localErro = "{{ erro }}";
        if (localErro && localErro.trim() !== "") {
            alert("[vwAutor|onload] Servidor retornou o erro: " + localErro);
        }
        document.getElementById("codigo").focus();
    };

    function autorForm() {
        return {
            form: {
                codigo: '',
                nome: '',
                nacionalidade: '',
                datanasc: '',
                royalties: ''
            },
            message: '',
            messageClass: '',
            async insertForm() {
                try {
                    console.log("Valor na página:", JSON.stringify(this.form));
                    const response = await fetch('/autor/InsertAutor', {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(this.form)
                    });
                    const result = await response.json();

                    if (result.status === "ok") {
                        alert("Autor cadastrado com sucesso!");
                        this.resetForm();
                    } else {
                        const errorData = result.status;
                        this.message = `Erro! Não foi possível cadastrar o autor devido ao erro: ${errorData}`;
                        this.messageClass = 'alert alert-danger';
                    }
                } catch (error) {
                    this.message = `Erro de conexão: ${error.message}`;
                    this.messageClass = 'alert alert-danger';
                }
            },
            resetForm() {
                this.form = {
                    codigo: '',
                    nome: '',
                    nacionalidade: '',
                    datanasc: '',
                    royalties: ''
                };
                this.message = '';
                this.messageClass = '';
            }
        };
    }
</script>
{% endblock %}
